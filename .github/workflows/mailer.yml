name: Recruiter Mailer (daily 9am ET)

on:
  schedule:
    # 13:00 UTC = 9am ET (during DST), 14:00 UTC â‰ˆ 9am ET (during Standard Time)
    - cron: "0 13 * * *"
    - cron: "0 14 * * *"
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  send-mails:
    runs-on: ubuntu-latest
    env:
      # ---- App runtime config from repo secrets ----
      SHEET_CSV_URL: ${{ secrets.SHEET_CSV_URL }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SENDER_NAME: ${{ secrets.SENDER_NAME }}
      SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      # Controls (tweak as you like)
      MAX_PER_RUN: "100"
      RATE_LIMIT_SECONDS: "8"
      DRY_RUN: "false"
      TEST_MODE: "false"
      # For pushing the encrypted log back
      GH_PAT: ${{ secrets.GH_PAT }}
      # AGE keys for encrypt/decrypt (optional, but recommended)
      AGE_PUBLIC_KEY: ${{ secrets.AGE_PUBLIC_KEY }}
      AGE_PRIVATE_KEY: ${{ secrets.AGE_PRIVATE_KEY }}
    steps:
      - name: Check out repo
      - uses: actions/checkout@v4

      # Run only once at 9am America/New_York even though we schedule twice daily.
      - name: Guard to run only at 9am ET
        id: guard
        run: |
          tz="America/New_York"
          now_local=$(TZ=$tz date +%H)
          if [ "$now_local" != "09" ]; then
            echo "not_9am=true" >> $GITHUB_OUTPUT
          fi

      - name: Stop if not 9am ET
        if: steps.guard.outputs.not_9am == 'true'
        run: echo "Skipping because it's not 9am ET on this runner"; exit 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install system deps (age for encryption)
        run: |
          sudo apt-get update
          sudo apt-get install -y age

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Optional: fetch resume from a URL secret and save it so it's attached
      - name: Download resume (optional)
        if: ${{ secrets.RESUME_URL != '' }}
        run: |
          curl -fsSL "$RESUME_URL" -o Resume_Aniket_Patole.pdf || echo "No resume URL or download failed"
        env:
          RESUME_URL: ${{ secrets.RESUME_URL }}

      - name: Decrypt sent_log (if keys + file exist)
        run: |
          if [ -n "$AGE_PRIVATE_KEY" ] && [ -f "sent_log.enc" ]; then
            mkdir -p ~/.age
            printf "%s\n" "$AGE_PRIVATE_KEY" > ~/.age/key.txt
            chmod 600 ~/.age/key.txt
            if ! age --decrypt -i ~/.age/key.txt -o sent_log.json sent_log.enc; then
              echo '{}' > sent_log.json
            fi
          else
            # start with empty log if none
            if [ ! -f sent_log.json ]; then
              echo '{}' > sent_log.json
            fi
          fi

      - name: Run mailer
        run: |
          python mailer.py

      - name: Re-encrypt sent_log
        run: |
          if [ -n "$AGE_PUBLIC_KEY" ]; then
            age --encrypt -r "$AGE_PUBLIC_KEY" -o sent_log.enc sent_log.json
          else
            echo "AGE_PUBLIC_KEY missing; keeping plaintext sent_log.json only in this runner (will not push)."
          fi

      - name: Commit & push encrypted log
        if: ${{ env.AGE_PUBLIC_KEY != '' && env.GH_PAT != '' }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add sent_log.enc
          git commit -m "chore: update encrypted sent log" || echo "No changes to commit"

          # auth using PAT
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git
          # push to same branch this workflow ran on
          default_branch="${GITHUB_REF_NAME:-main}"
          git push origin "HEAD:${default_branch}"

      - name: Done
        run: echo "Mailer workflow completed."
