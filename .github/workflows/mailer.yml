name: Recruiter Mailer (Daily)

on:
  # Daily at 14:00 UTC (â‰ˆ 9:00 AM ET during Standard Time; 10:00 AM during DST)
  schedule:
    - cron: "0 14 * * *"
  # Manual trigger
  workflow_dispatch: {}

permissions:
  contents: write  # needed to push updated sent_log.enc back to repo

concurrency:
  group: mailer-daily
  cancel-in-progress: false

jobs:
  run-mailer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run mailer
        env:
          # --- LLM / Sheet ---
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SHEET_CSV_URL: ${{ secrets.SHEET_CSV_URL }}

          # --- Sender identity ---
          SENDER_NAME: ${{ secrets.SENDER_NAME }}
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}

          # --- SMTP (Gmail App Password or provider) ---
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}

          # --- Behavior controls ---
          MAX_PER_RUN: ${{ secrets.MAX_PER_RUN }}           # e.g. 100
          RATE_LIMIT_SECONDS: ${{ secrets.RATE_LIMIT_SECONDS }}  # e.g. 8
          DRY_RUN: "false"     # set to "true" to test without sending
          TEST_MODE: "false"   # set to "true" to bypass LLM and use template

          # --- Deliverability niceties ---
          LIST_UNSUBSCRIBE_MAILTO: ${{ secrets.LIST_UNSUBSCRIBE_MAILTO }}

          # --- Encrypted sent log ---
          SENT_LOG_KEY: ${{ secrets.SENT_LOG_KEY }}
        run: |
          python mailer.py

      - name: Persist encrypted sent_log.enc back to repo
        if: always()
        env:
          GH_PAT: ${{ secrets.GH_PAT }}  # Personal Access Token with 'repo' scope
        run: |
          if [ -f sent_log.enc ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add sent_log.enc
            git commit -m "chore: update encrypted sent log [skip ci]" || exit 0
            git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git
            # Push to current branch
            git push origin HEAD:${GITHUB_REF#refs/heads/}
          fi
