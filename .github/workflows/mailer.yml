name: Recruiter Mailer (daily 9am ET)

on:
  schedule:
    # 9:00 AM US Eastern â‰ˆ 13:00 UTC during Daylight Saving
    - cron: "0 13 * * *"
  workflow_dispatch:

jobs:
  send-mails:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
      # we disable default token so we can push with GH_PAT later
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: (Optional) Download resume from RESUME_URL
        env:
          RESUME_URL: ${{ secrets.RESUME_URL }}
        run: |
          if [ -n "$RESUME_URL" ]; then
            echo "Downloading resume from $RESUME_URL"
            curl -fsSL "$RESUME_URL" -o Resume_Aniket_Patole.pdf
            ls -lh Resume_Aniket_Patole.pdf || true
          else
            echo "No RESUME_URL secret set; skipping resume download."
          fi

      - name: Run mailer
        env:
          # LLM / OpenAI
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Sheet
          SHEET_CSV_URL: ${{ secrets.SHEET_CSV_URL }}

          # Sender identity
          SENDER_NAME: "Aniket Patole"
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}

          # Gmail SMTP (App Password)
          SMTP_HOST: smtp.gmail.com
          SMTP_PORT: "465"
          SMTP_USERNAME: ${{ secrets.SENDER_EMAIL }}
          SMTP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}

          # Controls
          MAX_PER_RUN: "100"
          RATE_LIMIT_SECONDS: "8"
          DRY_RUN: "false"
          TEST_MODE: "false"

          # Optional: List-Unsubscribe header
          LIST_UNSUBSCRIBE_MAILTO: ${{ secrets.SENDER_EMAIL }}
        run: |
          python mailer.py

      - name: Encrypt sent_log.json
        # Use bash test instead of expression to avoid 'secrets' parsing issues
        env:
          PUBLIC_AGE_KEY: ${{ secrets.PUBLIC_AGE_KEY }}
        run: |
          if [ -f sent_log.json ]; then
            if [ -z "$PUBLIC_AGE_KEY" ]; then
              echo "PUBLIC_AGE_KEY not set; skipping encryption."
              exit 0
            fi
            sudo apt-get update -y
            sudo apt-get install -y age
            echo "$PUBLIC_AGE_KEY" > pubkey.txt
            age -r "$(cat pubkey.txt)" -o sent_log.enc sent_log.json
            rm -f pubkey.txt
            ls -lh sent_log.enc
          else
            echo "sent_log.json not found; nothing to encrypt."
          fi

      - name: Commit & push encrypted log
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          REPO: ${{ github.repository }}
        run: |
          if [ ! -f sent_log.enc ]; then
            echo "No sent_log.enc to commit; skipping."
            exit 0
          fi

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout main || git checkout -b main
          git pull --rebase origin main || true
          git add sent_log.enc
          git commit -m "chore(ci): update encrypted sent log [skip ci]" || { echo "Nothing to commit"; exit 0; }

          if [ -z "$GH_PAT" ]; then
            echo "GH_PAT secret not set; cannot push."
            exit 1
          fi
          git push "https://x-access-token:${GH_PAT}@github.com/${REPO}.git" HEAD:main
